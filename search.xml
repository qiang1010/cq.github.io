<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>手写Promise</title>
    <url>/2020/05/24/%E6%89%8B%E5%86%99Promise/</url>
    <content><![CDATA[<h2 id="史上最最最详细的手写Promise教程">史上最最最详细的手写Promise教程</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Promise&#123;</span><br><span class="line">  constructor(executor)&#123;</span><br><span class="line">    this.state &#x3D; &#39;pending&#39;;</span><br><span class="line">    this.value &#x3D; undefined;</span><br><span class="line">    this.reason &#x3D; undefined;</span><br><span class="line">    this.onResolvedCallbacks &#x3D; [];</span><br><span class="line">    this.onRejectedCallbacks &#x3D; [];</span><br><span class="line">    let resolve &#x3D; value &#x3D;&gt; &#123;</span><br><span class="line">      if (this.state &#x3D;&#x3D;&#x3D; &#39;pending&#39;) &#123;</span><br><span class="line">        this.state &#x3D; &#39;fulfilled&#39;;</span><br><span class="line">        this.value &#x3D; value;</span><br><span class="line">        this.onResolvedCallbacks.forEach(fn&#x3D;&gt;fn());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    let reject &#x3D; reason &#x3D;&gt; &#123;</span><br><span class="line">      if (this.state &#x3D;&#x3D;&#x3D; &#39;pending&#39;) &#123;</span><br><span class="line">        this.state &#x3D; &#39;rejected&#39;;</span><br><span class="line">        this.reason &#x3D; reason;</span><br><span class="line">        this.onRejectedCallbacks.forEach(fn&#x3D;&gt;fn());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    try&#123;</span><br><span class="line">      executor(resolve, reject);</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">      reject(err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  then(onFulfilled,onRejected) &#123;</span><br><span class="line">    &#x2F;&#x2F; onFulfilled如果不是函数，就忽略onFulfilled，直接返回value</span><br><span class="line">    onFulfilled &#x3D; typeof onFulfilled &#x3D;&#x3D;&#x3D; &#39;function&#39; ? onFulfilled : value &#x3D;&gt; value;</span><br><span class="line">    &#x2F;&#x2F; onRejected如果不是函数，就忽略onRejected，直接扔出错误</span><br><span class="line">    onRejected &#x3D; typeof onRejected &#x3D;&#x3D;&#x3D; &#39;function&#39; ? onRejected : err &#x3D;&gt; &#123; throw err &#125;;</span><br><span class="line">    let promise2 &#x3D; new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">      if (this.state &#x3D;&#x3D;&#x3D; &#39;fulfilled&#39;) &#123;</span><br><span class="line">        &#x2F;&#x2F; 异步</span><br><span class="line">        setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">          try &#123;</span><br><span class="line">            let x &#x3D; onFulfilled(this.value);</span><br><span class="line">            resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">          &#125; catch (e) &#123;</span><br><span class="line">            reject(e);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, 0);</span><br><span class="line">      &#125;;</span><br><span class="line">      if (this.state &#x3D;&#x3D;&#x3D; &#39;rejected&#39;) &#123;</span><br><span class="line">        &#x2F;&#x2F; 异步</span><br><span class="line">        setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F; 如果报错</span><br><span class="line">          try &#123;</span><br><span class="line">            let x &#x3D; onRejected(this.reason);</span><br><span class="line">            resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">          &#125; catch (e) &#123;</span><br><span class="line">            reject(e);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, 0);</span><br><span class="line">      &#125;;</span><br><span class="line">      if (this.state &#x3D;&#x3D;&#x3D; &#39;pending&#39;) &#123;</span><br><span class="line">        this.onResolvedCallbacks.push(() &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F; 异步</span><br><span class="line">          setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">              let x &#x3D; onFulfilled(this.value);</span><br><span class="line">              resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">            &#125; catch (e) &#123;</span><br><span class="line">              reject(e);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, 0);</span><br><span class="line">        &#125;);</span><br><span class="line">        this.onRejectedCallbacks.push(() &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F; 异步</span><br><span class="line">          setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">              let x &#x3D; onRejected(this.reason);</span><br><span class="line">              resolvePromise(promise2, x, resolve, reject);</span><br><span class="line">            &#125; catch (e) &#123;</span><br><span class="line">              reject(e);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, 0)</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">    &#x2F;&#x2F; 返回promise，完成链式</span><br><span class="line">    return promise2;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>home</title>
    <url>/2020/05/25/index/</url>
    <content><![CDATA[<hr>
<h2 id="title-Hello-World">title: Hello World</h2>
<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
  </entry>
  <entry>
    <title>next 主题使用</title>
    <url>/2020/05/25/next%20%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>官网： <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p>
]]></content>
      <categories>
        <category>Next 主题</category>
      </categories>
  </entry>
</search>
